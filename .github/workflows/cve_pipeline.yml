name: Kaggle CVE vulnerability enrichment automation pipeline

on:
    # Run automatically at 12:00 UTC every day
    schedule:
        - cron: '0 12 * * *'

    workflow_dispatch:
    # Run also when any of these files are updated using the main branch (for testing)
    push:
        branches: 
            - main
        paths:
            - 'extract2.py'
            - 'kaggle_manager.py'
            - 'requirements.txt'
            - '.github/workflows/cve_pipeline.yml'

jobs:
    extract-cve-and-upload:
    
        runs-on: ubuntu-latest

        steps:
        #Step 1: Check out the repository 
        - name: Check repository
          uses: actions/checkout@v4

          with: 
            fetch-depth: 0

        #Step 2: Install python and it's dependencies using pip
        - name: Setup Python
          uses: actions/setup-python@v4

          with: 
            python-version: '3.12.4'
            cache: 'pip'
            run: |
                python -m pip install --upgrade pip

        # Step 2.5: Installing dependencies from requirements file using pip
        - name: Install dependencies
          run: |
            pip install -r requirements.txt

        # Step 3: Setup github and kaggle environment variables
        - name: Setup environment variables
          run: |
            echo 'GITHUB_TOKEN' = ${{secrets.GH_TOKEN}} >> $GITHUB_ENV 
            echo 'KAGGLE_USERNAME' = ${{secrets.KAGGLE_USERNAME}} >> $GITHUB_ENV
            echo 'KAGGLE_KEY' = ${{secrets.KAGGLE_KEY}} >> $GITHUB_ENV  

        #Step 4: Configure Kaggle json file for API access
        - name: Configure Kaggle API credentials
          run: |
            # Create a directory for Kaggle credential
            mkdir --parents ~/.kaggle
            # Create a json file containing the Kaggle API credentials and copying to kaggle.json
            echo '{"username":"${{ secrets.KAGGLE_USERNAME }}","key":"${{ secrets.KAGGLE_KEY }}"}' > ~/.kaggle/kaggle.json
            #Setting directory permissions to r+w only 
            chmod 600 ~/.kaggle/kaggle.json

        # Step 5: Run cve extraction and csv creation from vulnerichment repo
        - name: Run CVE extraction from CISA vulnrichment repository
          run: |
            # First, check if GITHUB_TOKEN is set
            if [ -n "${{ secrets.GITHUB_TOKEN }}" ]; then
              echo "GITHUB_TOKEN is set"
            else
              echo "GITHUB_TOKEN is not set"
            fi

            #Second, check if Kaggle credential env variables are set
            if [ -n "${{ secrets.KAGGLE_USERNAME }}" ] && [ -n "${{ secrets.KAGGLE_KEY }}" ]; then
              echo "Kaggle credentials are set"
            else
              echo "Kaggle credentials are not set"
            fi

            # Third, start CVE extraction
            echo 'Starting CVE extraction...'
            python extract2.py
            echo 'CVE extraction completed.'

            [ -f "cve_data.csv" ] && echo " CSV file created successfully." || echo "Failed to create output CSV file."

